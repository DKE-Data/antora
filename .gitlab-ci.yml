image: node:12-buster
stages: [init, verify, deploy]
variables:
  GIT_DEPTH: '5'
  MOCHA_TIMEOUT: '5000'
  #npm_config_audit: 'false'
  npm_config_cache: &npm_cache_dir .cache/npm
  npm_config_fund: 'false'
  npm_config_prefer_offline: 'true'
.defs:
# only_code not used when an MR is created, hence the need for except_docs
- &only_code
  only:
    changes:
    - .gitlab-ci.yml
    - 'package{-lock,}.json'
    - gulpfile.js
    - '{gulp.d,packages,test}/**/*'
- &except_docs
  except:
  - /^docs\/./
- &only_schedules
  only:
    refs:
    - schedules
    - releases@antora/antora
- &npm_cache_config
  key: npm-cache
  paths:
  - *npm_cache_dir
- &npm_cache_pull_push
  cache:
    <<: *npm_cache_config
    policy: pull-push
- &npm_cache_pull_only
  cache:
    <<: *npm_cache_config
    policy: pull
- &npm_install
  before_script:
  - node -p '`Node.js ${process.version}`'
  - mv package-lock.json package-lock.json~
  - npm i --no-package-lock --no-save --no-audit --silent npm@$(node -p 'require("./package.json").devDependencies.npm')
  - mv package-lock.json~ package-lock.json
  - npx npm i --quiet
- &save_coverage
  artifacts:
    paths:
    - coverage
# this step also seeds the dependency cache
lint:
  interruptible: true
  stage: init
  <<: *except_docs
  <<: *only_code
  <<: *npm_cache_pull_push
  <<: *npm_install
  script: npx --no-install gulp lint
test:node-12-linux:
  interruptible: true
  image: node:12-buster
  stage: verify
  <<: *only_schedules
  <<: *npm_cache_pull_only
  <<: *npm_install
  script: npx --no-install gulp test
test:node-14-linux:
  interruptible: true
  image: node:14-buster
  stage: verify
  <<: *only_schedules
  <<: *npm_cache_pull_only
  <<: *npm_install
  script: npx --no-install gulp test
test:node-16-linux:
  interruptible: true
  image: node:16-buster
  stage: verify
  variables:
    COVERAGE: 'true'
  <<: *except_docs
  <<: *only_code
  <<: *npm_cache_pull_only
  <<: *npm_install
  script: npx --no-install gulp test
  <<: *save_coverage
test:node-17-linux:
  interruptible: true
  image: node:17-buster
  stage: verify
  <<: *only_schedules
  <<: *npm_cache_pull_only
  <<: *npm_install
  script: npx --no-install gulp test
# https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/blob/main/cookbooks/preinstalled-software/README.md
test:windows:
  tags: [windows]
  stage: verify
  interruptible: true
  variables:
    COVERAGE: 'true'
    MOCHA_TIMEOUT: '10000'
  <<: *except_docs
  <<: *only_code
  # cache does not currently work on the Windows runner
  #<<: *npm_cache_pull_only
  before_script:
  - choco upgrade -y nodejs --version=12.22.7
  - node -p '`Node.js ${process.version}`'
  - npm i --no-package-lock --no-save --no-audit --silent npm@~8.1
  - npx npm i --quiet
  script: npx --no-install gulp test
  <<: *save_coverage
release:
  stage: deploy
  only:
  - releases@antora/antora
  environment: releases
  before_script:
  - npm i -g --no-audit --silent lerna@$(node -p 'require("./lerna.json").lerna')
  - NODE_PATH=$(npm -g prefix)/lib/node_modules/lerna/node_modules node scripts/patch-libnpmpublish.js
  script:
  - scripts/release.sh
  # triggers release of Docker image
  - env $(echo -en $(cat releaserc)) sh -c 'curl -o /dev/null -s -X POST -F "token=$CI_JOB_TOKEN" -F "ref=$RELEASE_BRANCH" -F "variables[ANTORA_VERSION]=$RELEASE_VERSION" $DOCKER_IMAGE_PIPELINE_TRIGGER'
