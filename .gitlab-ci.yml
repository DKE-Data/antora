workflow:
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_PIPELINE_SOURCE == 'schedule' || $CI_PIPELINE_SOURCE == 'web'
  - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS == null && $CI_COMMIT_BRANCH != /^docs\//
    changes:
    - .eslintrc
    - .gitlab-ci.yml
    - package{-lock,}.json
    - packages/
variables:
  GIT_DEPTH: '5'
  DEFAULT_NODE_VERSION: '16'
  LINUX_DISTRO: buster
  NPM_CONFIG_CACHE: &npm_cache_dir .cache/npm
default:
  image: node:$DEFAULT_NODE_VERSION-$LINUX_DISTRO
  interruptible: true
.defs:
- &if_docs_mr
  rules:
  - if: &docs_mr $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^docs\//
- &if_releases
  rules:
  - if: $CI_PIPELINE_SOURCE == 'push' && $CI_PROJECT_PATH == 'antora/antora' && $CI_COMMIT_BRANCH == 'releases'
    exists:
    - releaserc
- &if_schedule
  rules:
  - if: ($CI_PIPELINE_SOURCE == 'schedule') || ($CI_PIPELINE_SOURCE == 'web' && $CI_JOB_NAME == 'test:windows' && $ENABLE_WINDOWS_JOB)
- &unless_docs_mr
  rules:
  - if: *docs_mr
    when: never
  - when: always
- &platform_info node -p '`${os.type()} ${os.release()}\nNode.js ${process.version}`'
- &coverage_path
  paths:
  - reports/lcov-report
.npm:
  stage: test
  <<: *if_schedule
  before_script:
  - *platform_info
  - mv package.json package~.json && mv package-lock.json package-lock~.json
  - npm i --no-package-lock --no-save --no-audit --silent npm@$(node -p 'require("./package~.json").devDependencies.npm')
  - rm -f node_modules/.package-lock.json
  - mv package~.json package.json && mv package-lock~.json package-lock.json
  - npx npm i --no-fund --prefer-offline --quiet
  cache: &npm_cache
    key: npm-cache
    paths:
    - *npm_cache_dir
    policy: pull
  script: npx npm test
# this job signals success to the MR UI
docs:
  stage: test
  <<: *if_docs_mr
  script: echo 'we love docs!'
# this job also seeds the dependency cache
lint:
  extends: .npm
  stage: .pre
  <<: *unless_docs_mr
  cache:
    <<: *npm_cache
    policy: pull-push
  script:
  - npx npm run lint
  - |-
    if [ -n "$(npx npm --silent run format && git --no-pager diff --name-only)" ]; then
      git --no-pager diff
      false
    fi
test:node-12-linux:
  extends: .npm
  image: node:12-$LINUX_DISTRO
  <<: *unless_docs_mr
test:node-14-linux:
  extends: .npm
  image: node:14-$LINUX_DISTRO
test:node-16-linux:
  extends: .npm
  <<: *unless_docs_mr
  script: npx npm run coverage
  coverage: '/^All files *[|] *([0-9.]+) *[|]/'
  artifacts:
    when: always
    expose_as: coverage-report
    <<: *coverage_path
    reports:
      cobertura: reports/cobertura-coverage.xml
      junit: reports/tests-xunit.xml
test:node-17-linux:
  extends: .npm
  image: node:17-$LINUX_DISTRO
test:macos:
  extends: .npm
  image: macos-11-xcode-12
  tags: [shared-macos-amd64]
# https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/blob/main/cookbooks/preinstalled-software/README.md
test:windows:
  extends: .npm
  tags: [windows]
  # cache does not currently work on the Windows runner
  cache: {}
  before_script:
  - choco upgrade -y nodejs --version=12.22.7
  - *platform_info
  - Get-ChildItem package*.json | Rename-Item -NewName { $_.Name -replace '.json','~.json' }
  - npm i --no-package-lock --no-save --no-audit --silent npm@$(node -p "require('./package~.json').devDependencies.npm")
  - Get-ChildItem package*~.json | Rename-Item -NewName { $_.Name -replace '~.json','.json' }
  - if (Test-Path node_modules/.package-lock.json) { Remove-Item node_modules/.package-lock.json }
  - npx npm i --no-fund --prefer-offline --quiet
  script: npx npm run coverage
  artifacts:
    <<: *coverage_path
release:
  stage: deploy
  environment: releases
  <<: *if_releases
  before_script:
  - npm i -g --no-audit --silent lerna@$(node -p 'require("./lerna.json").lerna')
  script:
  - scripts/release.sh
  # triggers release of Docker image
  - env $(echo -en $(cat releaserc)) sh -c 'curl -o /dev/null -s -X POST -F "token=$CI_JOB_TOKEN" -F "ref=$RELEASE_BRANCH" -F "variables[ANTORA_VERSION]=$RELEASE_VERSION" $DOCKER_IMAGE_PIPELINE_TRIGGER'
